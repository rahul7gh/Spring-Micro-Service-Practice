<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.0</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.optimagrowth.license</groupId>
	<artifactId>license-microservices</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>License-Microservices</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
		<docker.image.prefix>ostock</docker.image.prefix>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
			<version>3.1.3</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId> 
			spring-boot-starter-data-jpa </artifactId> </dependency> <dependency> <groupId>org.postgresql</groupId> 
			<artifactId>postgresql</artifactId> </dependency> -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>
			 	spring-cloud-starter-netflix-eureka-client
			 </artifactId>
			<version>3.1.3</version>
		</dependency>
	</dependencies>

	<build>

		<plugins>


			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-resources-plugin</artifactId> 
				<executions> <execution> <id>copy-docker-context</id> <phase>pre-integration-test</phase> 
				<goals> <goal>copy-resources</goal> </goals> <configuration> <outputDirectory>${basedir}/src/main/resources/docker-context-directory</outputDirectory> 
				<resources> <resource> <directory>${basedir}/target/</directory> <includes> 
				<include>${project.build.finalName}.jar</include> </includes> </resource> 
				</resources> </configuration> </execution> </executions> </plugin> <plugin> 
				<groupId>com.spotify</groupId> <artifactId>dockerfile-maven-plugin</artifactId> 
				<version>1.4.13</version> <executions> <execution> <id>Building Docker Image</id> 
				<phase>pre-integration-test</phase> <goals> <goal>build</goal> </goals> </execution> 
				</executions> <configuration> <contextDirectory> ${basedir}/src/main/resources/docker-context-directory 
				</contextDirectory> <repository>ostock/license-microservice</repository> 
				<tag>${project.version}</tag> <buildArgs> <project_build_finalName> ${project.build.finalName} 
				</project_build_finalName> </buildArgs> </configuration> </plugin> -->
		</plugins>
	</build>
</project>